{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c484a44b",
   "metadata": {},
   "source": [
    "# <span style=\"color:red\"> Version antérieure au 29 Mars 2023 </span>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "961e9200",
   "metadata": {},
   "source": [
    "# Importation des librairies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "def9b3c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Importation des librairies numpy et panda\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6897ef5",
   "metadata": {},
   "source": [
    "# Importation des fichiers CSV et inspection des données"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "137d8959",
   "metadata": {},
   "source": [
    "### Importation du fichier \"aide_alimentaire\" et inspection de ses données"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "dcdae7fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pays bénéficiaire</th>\n",
       "      <th>Année</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Valeur</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>Autres non-céréales</td>\n",
       "      <td>682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014</td>\n",
       "      <td>Autres non-céréales</td>\n",
       "      <td>335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>Blé et Farin</td>\n",
       "      <td>39224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014</td>\n",
       "      <td>Blé et Farin</td>\n",
       "      <td>15160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>Céréales</td>\n",
       "      <td>40504</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Pays bénéficiaire  Année              Produit  Valeur\n",
       "0       Afghanistan   2013  Autres non-céréales     682\n",
       "1       Afghanistan   2014  Autres non-céréales     335\n",
       "2       Afghanistan   2013         Blé et Farin   39224\n",
       "3       Afghanistan   2014         Blé et Farin   15160\n",
       "4       Afghanistan   2013             Céréales   40504"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Importation fichier csv \"aide_alimentaire\"\n",
    "aide_alimentaire=pd.read_csv('aide_alimentaire.csv')\n",
    "aide_alimentaire.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c3654b6e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1475 entries, 0 to 1474\n",
      "Data columns (total 4 columns):\n",
      " #   Column             Non-Null Count  Dtype \n",
      "---  ------             --------------  ----- \n",
      " 0   Pays bénéficiaire  1475 non-null   object\n",
      " 1   Année              1475 non-null   int64 \n",
      " 2   Produit            1475 non-null   object\n",
      " 3   Valeur             1475 non-null   int64 \n",
      "dtypes: int64(2), object(2)\n",
      "memory usage: 46.2+ KB\n"
     ]
    }
   ],
   "source": [
    "#Vérifier les types de chaque colonnes, les valeurs non-nulles, la taille du dataframe \"aide_alimentaire\"\n",
    "aide_alimentaire.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cf9d5fe9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Renommer la colonne \"Valeur\" en \"Qtité Aide en tonne\"\n",
    "aide_alimentaire=aide_alimentaire.rename(columns={'Valeur':'Qtité Aide en tonne'})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28ff3ec2",
   "metadata": {},
   "source": [
    "### Importation du fichier \"population\" et inspection de ses données"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "025ba664",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>32269.589</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014</td>\n",
       "      <td>33370.794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015</td>\n",
       "      <td>34413.603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2016</td>\n",
       "      <td>35383.032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296.113</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Zone  Année     Valeur\n",
       "0  Afghanistan   2013  32269.589\n",
       "1  Afghanistan   2014  33370.794\n",
       "2  Afghanistan   2015  34413.603\n",
       "3  Afghanistan   2016  35383.032\n",
       "4  Afghanistan   2017  36296.113"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Importation fichier csv \"population\"\n",
    "population=pd.read_csv('population.csv')\n",
    "population.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a3106091",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1416 entries, 0 to 1415\n",
      "Data columns (total 3 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   Zone    1416 non-null   object \n",
      " 1   Année   1416 non-null   int64  \n",
      " 2   Valeur  1416 non-null   float64\n",
      "dtypes: float64(1), int64(1), object(1)\n",
      "memory usage: 33.3+ KB\n"
     ]
    }
   ],
   "source": [
    "#Vérifier les types de chaque colonnes, les valeurs non-nulles, la taille du dataframe \"population\"\n",
    "population.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "719b8c1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>32269589.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014</td>\n",
       "      <td>33370794.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015</td>\n",
       "      <td>34413603.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2016</td>\n",
       "      <td>35383032.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1411</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2014</td>\n",
       "      <td>13586707.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>13814629.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1413</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2016</td>\n",
       "      <td>14030331.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1414</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1415</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2018</td>\n",
       "      <td>14438802.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1416 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Zone  Année      Valeur\n",
       "0     Afghanistan   2013  32269589.0\n",
       "1     Afghanistan   2014  33370794.0\n",
       "2     Afghanistan   2015  34413603.0\n",
       "3     Afghanistan   2016  35383032.0\n",
       "4     Afghanistan   2017  36296113.0\n",
       "...           ...    ...         ...\n",
       "1411     Zimbabwe   2014  13586707.0\n",
       "1412     Zimbabwe   2015  13814629.0\n",
       "1413     Zimbabwe   2016  14030331.0\n",
       "1414     Zimbabwe   2017  14236595.0\n",
       "1415     Zimbabwe   2018  14438802.0\n",
       "\n",
       "[1416 rows x 3 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Dans le dataframe \"population\", la population est exprimée en millier d'habitants => Convertir les milliers en million\n",
    "population['Valeur'] = population['Valeur']*1000\n",
    "population"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "519d602c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>32269589.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014</td>\n",
       "      <td>33370794.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015</td>\n",
       "      <td>34413603.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2016</td>\n",
       "      <td>35383032.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1411</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2014</td>\n",
       "      <td>13586707.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>13814629.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1413</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2016</td>\n",
       "      <td>14030331.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1414</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1415</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2018</td>\n",
       "      <td>14438802.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1416 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Zone  Année  Population\n",
       "0     Afghanistan   2013  32269589.0\n",
       "1     Afghanistan   2014  33370794.0\n",
       "2     Afghanistan   2015  34413603.0\n",
       "3     Afghanistan   2016  35383032.0\n",
       "4     Afghanistan   2017  36296113.0\n",
       "...           ...    ...         ...\n",
       "1411     Zimbabwe   2014  13586707.0\n",
       "1412     Zimbabwe   2015  13814629.0\n",
       "1413     Zimbabwe   2016  14030331.0\n",
       "1414     Zimbabwe   2017  14236595.0\n",
       "1415     Zimbabwe   2018  14438802.0\n",
       "\n",
       "[1416 rows x 3 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Renommer colonne 'Valeur' en colonne 'Population'\n",
    "population=population.rename(columns={'Valeur':'Population'})\n",
    "population"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f356ab4",
   "metadata": {},
   "source": [
    "### Importation du fichier \"sous_nutrition\" et inspection de ses données"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2c5e8a5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2012-2014</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013-2015</td>\n",
       "      <td>8.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014-2016</td>\n",
       "      <td>8.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015-2017</td>\n",
       "      <td>9.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2016-2018</td>\n",
       "      <td>10.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Zone      Année Valeur\n",
       "0  Afghanistan  2012-2014    8.6\n",
       "1  Afghanistan  2013-2015    8.8\n",
       "2  Afghanistan  2014-2016    8.9\n",
       "3  Afghanistan  2015-2017    9.7\n",
       "4  Afghanistan  2016-2018   10.5"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Importation fichier csv \"sous_nutrition\"\n",
    "sous_nutrition=pd.read_csv('sous_nutrition.csv')\n",
    "sous_nutrition.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "8eb72d9e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1218 entries, 0 to 1217\n",
      "Data columns (total 3 columns):\n",
      " #   Column  Non-Null Count  Dtype \n",
      "---  ------  --------------  ----- \n",
      " 0   Zone    1218 non-null   object\n",
      " 1   Année   1218 non-null   object\n",
      " 2   Valeur  624 non-null    object\n",
      "dtypes: object(3)\n",
      "memory usage: 28.7+ KB\n"
     ]
    }
   ],
   "source": [
    "#Vérifier les types de chaque colonnes, les valeurs non-nulles, la taille du dataframe \"sous_nutrition\" \n",
    "sous_nutrition.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6d1aa696",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Remplacer les valeurs string'<0.1' en '0.05' puis le convertir en type float. Mais les valeurs seront affectés par la suite \n",
    "sous_nutrition['Valeur'] = sous_nutrition['Valeur'].replace('<0.1', '0.05').astype(float)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fdb6e615",
   "metadata": {},
   "source": [
    "**Les variables de la colonne \"Année\" du dataframe \"sous_nutrition\" sont de type \"object\" parce qu'elles représentent une intervalle de date. Pour faciliter la fusion avec les deux autres dataframe \"population\" et \"aide_alimentaire\" par la suite, ils doivent tous les trois être dans le même type.\n",
    "Ce changement de type ce déroulera en 4 étapes:**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e86c5e82",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Début Année</th>\n",
       "      <th>Fin Année</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2012-2014</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2012</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013-2015</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2013</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014-2016</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2014</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015-2017</td>\n",
       "      <td>9.7</td>\n",
       "      <td>2015</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2016-2018</td>\n",
       "      <td>10.5</td>\n",
       "      <td>2016</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1213</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2013-2015</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2013</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1214</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2014-2016</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1215</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015-2017</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2015</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1216</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2016-2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2016</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1217</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2017-2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1218 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Zone      Année  Valeur Début Année Fin Année\n",
       "0     Afghanistan  2012-2014     8.6        2012      2014\n",
       "1     Afghanistan  2013-2015     8.8        2013      2015\n",
       "2     Afghanistan  2014-2016     8.9        2014      2016\n",
       "3     Afghanistan  2015-2017     9.7        2015      2017\n",
       "4     Afghanistan  2016-2018    10.5        2016      2018\n",
       "...           ...        ...     ...         ...       ...\n",
       "1213     Zimbabwe  2013-2015     NaN        2013      2015\n",
       "1214     Zimbabwe  2014-2016     NaN        2014      2016\n",
       "1215     Zimbabwe  2015-2017     NaN        2015      2017\n",
       "1216     Zimbabwe  2016-2018     NaN        2016      2018\n",
       "1217     Zimbabwe  2017-2019     NaN        2017      2019\n",
       "\n",
       "[1218 rows x 5 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Etape 1:Couper le mot composé (intervalle de date) de la colonne 'Année' et mettre les deux parties dans des colonnes différentes en utilisant la méthode 'str.split()'\n",
    "sous_nutrition[['Début Année', 'Fin Année']] = sous_nutrition['Année'].str.split('-', 1, expand=True)\n",
    "sous_nutrition\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c92986fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Début Année</th>\n",
       "      <th>Fin Année</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2012-2014</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2012</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013-2015</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2013</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014-2016</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2014</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015-2017</td>\n",
       "      <td>9.7</td>\n",
       "      <td>2015</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2016-2018</td>\n",
       "      <td>10.5</td>\n",
       "      <td>2016</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1213</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2013-2015</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2013</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1214</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2014-2016</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1215</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015-2017</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2015</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1216</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2016-2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2016</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1217</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2017-2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1218 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Zone      Année  Valeur  Début Année  Fin Année\n",
       "0     Afghanistan  2012-2014     8.6         2012       2014\n",
       "1     Afghanistan  2013-2015     8.8         2013       2015\n",
       "2     Afghanistan  2014-2016     8.9         2014       2016\n",
       "3     Afghanistan  2015-2017     9.7         2015       2017\n",
       "4     Afghanistan  2016-2018    10.5         2016       2018\n",
       "...           ...        ...     ...          ...        ...\n",
       "1213     Zimbabwe  2013-2015     NaN         2013       2015\n",
       "1214     Zimbabwe  2014-2016     NaN         2014       2016\n",
       "1215     Zimbabwe  2015-2017     NaN         2015       2017\n",
       "1216     Zimbabwe  2016-2018     NaN         2016       2018\n",
       "1217     Zimbabwe  2017-2019     NaN         2017       2019\n",
       "\n",
       "[1218 rows x 5 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Etape 2:Convertir les nouvelles données 'Début Année' et 'Fin Année' en type integer\n",
    "sous_nutrition[['Début Année', 'Fin Année']]=sous_nutrition[['Début Année', 'Fin Année']].astype(int)\n",
    "sous_nutrition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b4fa2282",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Début Année</th>\n",
       "      <th>Fin Année</th>\n",
       "      <th>Année moy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2012-2014</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2012</td>\n",
       "      <td>2014</td>\n",
       "      <td>2013.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013-2015</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2013</td>\n",
       "      <td>2015</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014-2016</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2014</td>\n",
       "      <td>2016</td>\n",
       "      <td>2015.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015-2017</td>\n",
       "      <td>9.7</td>\n",
       "      <td>2015</td>\n",
       "      <td>2017</td>\n",
       "      <td>2016.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2016-2018</td>\n",
       "      <td>10.5</td>\n",
       "      <td>2016</td>\n",
       "      <td>2018</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1213</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2013-2015</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2013</td>\n",
       "      <td>2015</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1214</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2014-2016</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014</td>\n",
       "      <td>2016</td>\n",
       "      <td>2015.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1215</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015-2017</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2015</td>\n",
       "      <td>2017</td>\n",
       "      <td>2016.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1216</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2016-2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2016</td>\n",
       "      <td>2018</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1217</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2017-2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017</td>\n",
       "      <td>2019</td>\n",
       "      <td>2018.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1218 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Zone      Année  Valeur  Début Année  Fin Année  Année moy\n",
       "0     Afghanistan  2012-2014     8.6         2012       2014     2013.0\n",
       "1     Afghanistan  2013-2015     8.8         2013       2015     2014.0\n",
       "2     Afghanistan  2014-2016     8.9         2014       2016     2015.0\n",
       "3     Afghanistan  2015-2017     9.7         2015       2017     2016.0\n",
       "4     Afghanistan  2016-2018    10.5         2016       2018     2017.0\n",
       "...           ...        ...     ...          ...        ...        ...\n",
       "1213     Zimbabwe  2013-2015     NaN         2013       2015     2014.0\n",
       "1214     Zimbabwe  2014-2016     NaN         2014       2016     2015.0\n",
       "1215     Zimbabwe  2015-2017     NaN         2015       2017     2016.0\n",
       "1216     Zimbabwe  2016-2018     NaN         2016       2018     2017.0\n",
       "1217     Zimbabwe  2017-2019     NaN         2017       2019     2018.0\n",
       "\n",
       "[1218 rows x 6 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Etape 3: Chercher les moyennes des deux dates: 'Début Année' et 'Fin Année' et les mettre dans la colonne 'Année moy' nouvellement crée\n",
    "sous_nutrition ['Année moy']=round((sous_nutrition ['Début Année']+sous_nutrition['Fin Année'])/2)\n",
    "sous_nutrition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "76ba4657",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Année moy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2013.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2015.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>9.7</td>\n",
       "      <td>2016.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>10.5</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1213</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1214</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2015.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1215</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2016.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1216</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1217</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2018.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1218 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Zone  Valeur  Année moy\n",
       "0     Afghanistan     8.6     2013.0\n",
       "1     Afghanistan     8.8     2014.0\n",
       "2     Afghanistan     8.9     2015.0\n",
       "3     Afghanistan     9.7     2016.0\n",
       "4     Afghanistan    10.5     2017.0\n",
       "...           ...     ...        ...\n",
       "1213     Zimbabwe     NaN     2014.0\n",
       "1214     Zimbabwe     NaN     2015.0\n",
       "1215     Zimbabwe     NaN     2016.0\n",
       "1216     Zimbabwe     NaN     2017.0\n",
       "1217     Zimbabwe     NaN     2018.0\n",
       "\n",
       "[1218 rows x 3 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Etape 4: Suppression des colonnes devenues superflues\n",
    "sous_nutrition=sous_nutrition.drop(columns=['Année','Début Année','Fin Année'])\n",
    "sous_nutrition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "6dc9dba0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Population sous nutris</th>\n",
       "      <th>Année</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2013.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>8.8</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2015.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>9.7</td>\n",
       "      <td>2016.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>10.5</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1213</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1214</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2015.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1215</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2016.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1216</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1217</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2018.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1218 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Zone  Population sous nutris   Année\n",
       "0     Afghanistan                     8.6  2013.0\n",
       "1     Afghanistan                     8.8  2014.0\n",
       "2     Afghanistan                     8.9  2015.0\n",
       "3     Afghanistan                     9.7  2016.0\n",
       "4     Afghanistan                    10.5  2017.0\n",
       "...           ...                     ...     ...\n",
       "1213     Zimbabwe                     NaN  2014.0\n",
       "1214     Zimbabwe                     NaN  2015.0\n",
       "1215     Zimbabwe                     NaN  2016.0\n",
       "1216     Zimbabwe                     NaN  2017.0\n",
       "1217     Zimbabwe                     NaN  2018.0\n",
       "\n",
       "[1218 rows x 3 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Renommer la nouvelle colonne 'Année moy' en 'Année' et 'Valeur' en 'Population sous nutris'\n",
    "sous_nutrition=sous_nutrition.rename(columns={'Année moy':'Année','Valeur':'Population sous nutris'})\n",
    "sous_nutrition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "cb684d42",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Multiplier par 1000000 pour un résultat cohérent par la suite\n",
    "sous_nutrition['Population sous nutris']=sous_nutrition['Population sous nutris']*1000000"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f525a3f",
   "metadata": {},
   "source": [
    "## Importation du fichier \"dispo_alimentaire\" et inspection de ses données"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "5b9843fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Origine</th>\n",
       "      <th>Aliments pour animaux</th>\n",
       "      <th>Autres Utilisations</th>\n",
       "      <th>Disponibilité alimentaire (Kcal/personne/jour)</th>\n",
       "      <th>Disponibilité alimentaire en quantité (kg/personne/an)</th>\n",
       "      <th>Disponibilité de matière grasse en quantité (g/personne/jour)</th>\n",
       "      <th>Disponibilité de protéines en quantité (g/personne/jour)</th>\n",
       "      <th>Disponibilité intérieure</th>\n",
       "      <th>Exportations - Quantité</th>\n",
       "      <th>Importations - Quantité</th>\n",
       "      <th>Nourriture</th>\n",
       "      <th>Pertes</th>\n",
       "      <th>Production</th>\n",
       "      <th>Semences</th>\n",
       "      <th>Traitement</th>\n",
       "      <th>Variation de stock</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Abats Comestible</td>\n",
       "      <td>animale</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.72</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.77</td>\n",
       "      <td>53.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>53.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>53.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Agrumes, Autres</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.29</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.02</td>\n",
       "      <td>41.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Aliments pour enfants</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.03</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Ananas</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Bananes</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.70</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.05</td>\n",
       "      <td>82.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>82.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Zone                Produit   Origine  Aliments pour animaux  \\\n",
       "0  Afghanistan       Abats Comestible   animale                    NaN   \n",
       "1  Afghanistan        Agrumes, Autres  vegetale                    NaN   \n",
       "2  Afghanistan  Aliments pour enfants  vegetale                    NaN   \n",
       "3  Afghanistan                 Ananas  vegetale                    NaN   \n",
       "4  Afghanistan                Bananes  vegetale                    NaN   \n",
       "\n",
       "   Autres Utilisations  Disponibilité alimentaire (Kcal/personne/jour)  \\\n",
       "0                  NaN                                             5.0   \n",
       "1                  NaN                                             1.0   \n",
       "2                  NaN                                             1.0   \n",
       "3                  NaN                                             0.0   \n",
       "4                  NaN                                             4.0   \n",
       "\n",
       "   Disponibilité alimentaire en quantité (kg/personne/an)  \\\n",
       "0                                               1.72        \n",
       "1                                               1.29        \n",
       "2                                               0.06        \n",
       "3                                               0.00        \n",
       "4                                               2.70        \n",
       "\n",
       "   Disponibilité de matière grasse en quantité (g/personne/jour)  \\\n",
       "0                                               0.20               \n",
       "1                                               0.01               \n",
       "2                                               0.01               \n",
       "3                                                NaN               \n",
       "4                                               0.02               \n",
       "\n",
       "   Disponibilité de protéines en quantité (g/personne/jour)  \\\n",
       "0                                               0.77          \n",
       "1                                               0.02          \n",
       "2                                               0.03          \n",
       "3                                                NaN          \n",
       "4                                               0.05          \n",
       "\n",
       "   Disponibilité intérieure  Exportations - Quantité  Importations - Quantité  \\\n",
       "0                      53.0                      NaN                      NaN   \n",
       "1                      41.0                      2.0                     40.0   \n",
       "2                       2.0                      NaN                      2.0   \n",
       "3                       0.0                      NaN                      0.0   \n",
       "4                      82.0                      NaN                     82.0   \n",
       "\n",
       "   Nourriture  Pertes  Production  Semences  Traitement  Variation de stock  \n",
       "0        53.0     NaN        53.0       NaN         NaN                 NaN  \n",
       "1        39.0     2.0         3.0       NaN         NaN                 NaN  \n",
       "2         2.0     NaN         NaN       NaN         NaN                 NaN  \n",
       "3         0.0     NaN         NaN       NaN         NaN                 NaN  \n",
       "4        82.0     NaN         NaN       NaN         NaN                 NaN  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Importation fichier csv \"dispo_alimentaire\"\n",
    "dispo_alimentaire=pd.read_csv('dispo_alimentaire.csv')\n",
    "dispo_alimentaire.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e2911d93",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 15605 entries, 0 to 15604\n",
      "Data columns (total 18 columns):\n",
      " #   Column                                                         Non-Null Count  Dtype  \n",
      "---  ------                                                         --------------  -----  \n",
      " 0   Zone                                                           15605 non-null  object \n",
      " 1   Produit                                                        15605 non-null  object \n",
      " 2   Origine                                                        15605 non-null  object \n",
      " 3   Aliments pour animaux                                          2720 non-null   float64\n",
      " 4   Autres Utilisations                                            5496 non-null   float64\n",
      " 5   Disponibilité alimentaire (Kcal/personne/jour)                 14241 non-null  float64\n",
      " 6   Disponibilité alimentaire en quantité (kg/personne/an)         14015 non-null  float64\n",
      " 7   Disponibilité de matière grasse en quantité (g/personne/jour)  11794 non-null  float64\n",
      " 8   Disponibilité de protéines en quantité (g/personne/jour)       11561 non-null  float64\n",
      " 9   Disponibilité intérieure                                       15382 non-null  float64\n",
      " 10  Exportations - Quantité                                        12226 non-null  float64\n",
      " 11  Importations - Quantité                                        14852 non-null  float64\n",
      " 12  Nourriture                                                     14015 non-null  float64\n",
      " 13  Pertes                                                         4278 non-null   float64\n",
      " 14  Production                                                     9180 non-null   float64\n",
      " 15  Semences                                                       2091 non-null   float64\n",
      " 16  Traitement                                                     2292 non-null   float64\n",
      " 17  Variation de stock                                             6776 non-null   float64\n",
      "dtypes: float64(15), object(3)\n",
      "memory usage: 2.1+ MB\n"
     ]
    }
   ],
   "source": [
    "#Vérifier les types de chaque colonnes, les valeurs non-nulles, la taille du dataframe 'dispo_alimentaire'\n",
    "dispo_alimentaire.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75225b9e",
   "metadata": {},
   "source": [
    "# I. Demandes formulées par Marc pour l'année 2017"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "317c7bad",
   "metadata": {},
   "source": [
    "## Question1: Proportion de personnes en état de sous-nutrition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a9626e9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Présélectionner la date 2017 dans les 2 dataframes \"sous_nutrition\" et \"population\" pour faciliter le codage par la \n",
    "Sous_nutrition2017=sous_nutrition.loc[sous_nutrition['Année']==2017]\n",
    "Population2017=population.loc[population['Année']==2017]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ac14b813",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Population sous nutris</th>\n",
       "      <th>Année</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>10500000.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>3100000.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>57009756.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Albanie</td>\n",
       "      <td>100000.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2884169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Algérie</td>\n",
       "      <td>1300000.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>41389189.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Allemagne</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>82658409.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>Venezuela (République bolivarienne du)</td>\n",
       "      <td>8000000.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>29402484.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>Viet Nam</td>\n",
       "      <td>6500000.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>94600648.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>Yémen</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>27834819.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>Zambie</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>16853599.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>14236595.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>203 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                       Zone  Population sous nutris   Année  \\\n",
       "0                               Afghanistan              10500000.0  2017.0   \n",
       "1                            Afrique du Sud               3100000.0  2017.0   \n",
       "2                                   Albanie                100000.0  2017.0   \n",
       "3                                   Algérie               1300000.0  2017.0   \n",
       "4                                 Allemagne                     NaN  2017.0   \n",
       "..                                      ...                     ...     ...   \n",
       "198  Venezuela (République bolivarienne du)               8000000.0  2017.0   \n",
       "199                                Viet Nam               6500000.0  2017.0   \n",
       "200                                   Yémen                     NaN  2017.0   \n",
       "201                                  Zambie                     NaN  2017.0   \n",
       "202                                Zimbabwe                     NaN  2017.0   \n",
       "\n",
       "     Population  \n",
       "0    36296113.0  \n",
       "1    57009756.0  \n",
       "2     2884169.0  \n",
       "3    41389189.0  \n",
       "4    82658409.0  \n",
       "..          ...  \n",
       "198  29402484.0  \n",
       "199  94600648.0  \n",
       "200  27834819.0  \n",
       "201  16853599.0  \n",
       "202  14236595.0  \n",
       "\n",
       "[203 rows x 4 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Fusionner les dataframe \"sous_nutrition\" et \"Population2017\" pour créer le dataframe \"proportion_pers_sous_nutris\"\n",
    "proportion_pers_sous_nutris=pd.merge(Sous_nutrition2017, Population2017, on=['Zone','Année'], how ='inner')\n",
    "display(proportion_pers_sous_nutris)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c519ac4b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7543798779.0"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Population totale (mondiale)\n",
    "PopTotale=proportion_pers_sous_nutris['Population'].sum()\n",
    "PopTotale"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "584d4faa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "536700000.0"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Somme des personnes sous nutris \n",
    "PersSousNutris=proportion_pers_sous_nutris['Population sous nutris'].sum()\n",
    "PersSousNutris"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33b19f7e",
   "metadata": {},
   "source": [
    "**Proportion de personnes en état de sous nutrition**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "6b87b2c4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La proportion de personnes sous-nutris est de: 7.11 %\n"
     ]
    }
   ],
   "source": [
    "#Proportion des personnes en état de sous nutrition en pourcentage\n",
    "PropPersSousNutris=(PersSousNutris/PopTotale*100)\n",
    "\n",
    "print(\"La proportion de personnes sous-nutris est de:\",\"%.2f\" % PropPersSousNutris,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "940c2ba0",
   "metadata": {},
   "source": [
    "## Question2:Nombre théorique de personnes pouvant être nourris. Le calculer à partir de la disponibilité alimentaire mondiale"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "e598c194",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Zone\n",
       "Afghanistan              2087.0\n",
       "Afrique du Sud           3020.0\n",
       "Albanie                  3188.0\n",
       "Algérie                  3293.0\n",
       "Allemagne                3503.0\n",
       "                          ...  \n",
       "Émirats arabes unis      3275.0\n",
       "Équateur                 2346.0\n",
       "États-Unis d'Amérique    3682.0\n",
       "Éthiopie                 2129.0\n",
       "Îles Salomon             2383.0\n",
       "Name: Disponibilité alimentaire (Kcal/personne/jour), Length: 174, dtype: float64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Reprise du dataframe Population2017 de la question1\n",
    "Population2017=population.loc[population['Année']==2017]\n",
    "#Création d'un dataframe \"dispo_alim1\" \n",
    "dispo_alim1=dispo_alimentaire[['Zone','Disponibilité alimentaire (Kcal/personne/jour)']]\n",
    "dispo_alim1=dispo_alim1.groupby('Zone')['Disponibilité alimentaire (Kcal/personne/jour)'].sum()\n",
    "dispo_alim1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "1ed4af98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Disponibilité alimentaire (Kcal/personne/jour)</th>\n",
       "      <th>Année</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2087.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>3020.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>57009756.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Albanie</td>\n",
       "      <td>3188.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>2884169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Algérie</td>\n",
       "      <td>3293.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>41389189.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Allemagne</td>\n",
       "      <td>3503.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>82658409.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>Émirats arabes unis</td>\n",
       "      <td>3275.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>9487203.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>Équateur</td>\n",
       "      <td>2346.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>16785361.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>États-Unis d'Amérique</td>\n",
       "      <td>3682.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>325084756.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>Éthiopie</td>\n",
       "      <td>2129.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>106399924.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>2383.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>636039.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>172 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Zone  Disponibilité alimentaire (Kcal/personne/jour)  \\\n",
       "0              Afghanistan                                          2087.0   \n",
       "1           Afrique du Sud                                          3020.0   \n",
       "2                  Albanie                                          3188.0   \n",
       "3                  Algérie                                          3293.0   \n",
       "4                Allemagne                                          3503.0   \n",
       "..                     ...                                             ...   \n",
       "167    Émirats arabes unis                                          3275.0   \n",
       "168               Équateur                                          2346.0   \n",
       "169  États-Unis d'Amérique                                          3682.0   \n",
       "170               Éthiopie                                          2129.0   \n",
       "171           Îles Salomon                                          2383.0   \n",
       "\n",
       "     Année   Population  \n",
       "0     2017   36296113.0  \n",
       "1     2017   57009756.0  \n",
       "2     2017    2884169.0  \n",
       "3     2017   41389189.0  \n",
       "4     2017   82658409.0  \n",
       "..     ...          ...  \n",
       "167   2017    9487203.0  \n",
       "168   2017   16785361.0  \n",
       "169   2017  325084756.0  \n",
       "170   2017  106399924.0  \n",
       "171   2017     636039.0  \n",
       "\n",
       "[172 rows x 4 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " #Création du dataframe \"DISPO_ALIM2017\" issu de la fusion entre le df \"Population2017\" et \"dispo_alim1\"\n",
    "DISPO_ALIM2017=pd.merge(dispo_alim1, Population2017, on='Zone')\n",
    "DISPO_ALIM2017"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "0d6558a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Création de la colonne Disponibilité alimentaire (Kcal/pays/an) qui sera une conversion de la disponibilité en Kcal/pers/jour, pour cela il faut multiplier par 365 (1an pour l'année 2017) et par le nombre de population\n",
    "DISPO_ALIM2017['Disponibilité alimentaire (Kcal/pays/an)']=DISPO_ALIM2017['Disponibilité alimentaire (Kcal/personne/jour)']*365*DISPO_ALIM2017['Population']\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30f93e2b",
   "metadata": {},
   "source": [
    "**Déterminer la disponibilité alimentaire annuelles par pays**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "a42d907f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Il y a une disponibilité alimentaire totale de: 7635429388975815.0 Kcal\n"
     ]
    }
   ],
   "source": [
    "DISPO_ALIM2017['Disponibilité alimentaire (Kcal/pays/an)'].sum()\n",
    "print(\"Il y a une disponibilité alimentaire totale de:\", DISPO_ALIM2017['Disponibilité alimentaire (Kcal/pays/an)'].sum(),\"Kcal\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7fc16c5",
   "metadata": {},
   "source": [
    "**Déterminer les besoins caloriques annuelles par pays**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9d1031df",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Un homme a besoin entre 2400 à 2600 Kcal par jour, on choisit de prendre 2600Kcal\n",
    "#Besoin calorique journalier pour un homme => BesoinKcalHJr(Kcal/jr)\n",
    "BesoinKcalHJr=2600\n",
    "#Besoin calorique annuel par pays pour un an =>BesoinKcalPaysPAn\n",
    "#Création d'une nouvelle colonne 'BesoinKcalPaysPAn'\n",
    "DISPO_ALIM2017['BesoinKcalPaysPAn'] = BesoinKcalHJr*365*DISPO_ALIM2017['Population']\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a4f6a707",
   "metadata": {},
   "source": [
    "**Pourcentage de personnes pouvant être nourries**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c4ff992e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Le pourcentage de personnes pouvant être nourries est de: 110.34 %\n"
     ]
    }
   ],
   "source": [
    "#Pourcentage des personnes pouvant être nourris\n",
    "#Calcul de la disponibilité alimentaire mondiale pour un an (2017)\n",
    "DISPO_ALIMmond2017=DISPO_ALIM2017['Disponibilité alimentaire (Kcal/pays/an)'].sum()\n",
    "#Calcul du besoin calorique mondial\n",
    "BesoinKcalMond2017=DISPO_ALIM2017['BesoinKcalPaysPAn'].sum()\n",
    "#Calcul du pourcentage de personnes pouvant être nourris\n",
    "Pourc_PersPEN=(DISPO_ALIMmond2017/BesoinKcalMond2017)*100\n",
    "\n",
    "print(\"Le pourcentage de personnes pouvant être nourries est de:\",\"%.2f\" % Pourc_PersPEN,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e924f8cb",
   "metadata": {},
   "source": [
    "**Nombre théorique de personnes pouvant être nourries**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "6a6671eb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nous pouvons nourrir théoriquement environ: 8045763318.204 personnes\n"
     ]
    }
   ],
   "source": [
    "#Nombre théorique de personnes pouvant être nourries\n",
    "#Calcul de la population mondiale en 2017\n",
    "PopulationMond2017=DISPO_ALIM2017['Population'].sum()\n",
    "#Calcul du nombre théorique de personnes pouvant être nourries\n",
    "NbretheoPersPEN=(Pourc_PersPEN*PopulationMond2017)/100\n",
    "print(\"Nous pouvons nourrir théoriquement environ:\", round(NbretheoPersPEN,3),\"personnes\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29b403d7",
   "metadata": {},
   "source": [
    "## Question3: Calculer la disponibilité alimentaire des produits végétaux"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "79a6adb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Origine</th>\n",
       "      <th>Disponibilité alimentaire (Kcal/personne/jour)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15595</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15596</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15597</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15603</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15604</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>vegetale</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11896 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Zone   Origine  Disponibilité alimentaire (Kcal/personne/jour)\n",
       "1       Afghanistan  vegetale                                             1.0\n",
       "2       Afghanistan  vegetale                                             1.0\n",
       "3       Afghanistan  vegetale                                             0.0\n",
       "4       Afghanistan  vegetale                                             4.0\n",
       "6       Afghanistan  vegetale                                             0.0\n",
       "...             ...       ...                                             ...\n",
       "15595  Îles Salomon  vegetale                                             0.0\n",
       "15596  Îles Salomon  vegetale                                             0.0\n",
       "15597  Îles Salomon  vegetale                                             0.0\n",
       "15603  Îles Salomon  vegetale                                             0.0\n",
       "15604  Îles Salomon  vegetale                                             4.0\n",
       "\n",
       "[11896 rows x 3 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Même procédé que la question précédente sauf que l'on va ajouter la colonne \"Origine\" pour sélectionner les produits d'origine végétales\n",
    "dispo_alimVeg=dispo_alimentaire[['Zone', 'Origine','Disponibilité alimentaire (Kcal/personne/jour)']]\n",
    "dispo_alimVeg=dispo_alimVeg.loc[dispo_alimVeg['Origine']=='vegetale']\n",
    "dispo_alimVeg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "b7cc2c5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Zone\n",
       "Afghanistan              1871.0\n",
       "Afrique du Sud           2533.0\n",
       "Albanie                  2203.0\n",
       "Algérie                  2915.0\n",
       "Allemagne                2461.0\n",
       "                          ...  \n",
       "Émirats arabes unis      2718.0\n",
       "Équateur                 1732.0\n",
       "États-Unis d'Amérique    2698.0\n",
       "Éthiopie                 2005.0\n",
       "Îles Salomon             2187.0\n",
       "Name: Disponibilité alimentaire (Kcal/personne/jour), Length: 174, dtype: float64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dispo_alimVeg=dispo_alimVeg.groupby('Zone')['Disponibilité alimentaire (Kcal/personne/jour)'].sum()\n",
    "dispo_alimVeg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2849624a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Disponibilité alimentaire (Kcal/personne/jour)</th>\n",
       "      <th>Année</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1871.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>2533.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>57009756.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Albanie</td>\n",
       "      <td>2203.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>2884169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Algérie</td>\n",
       "      <td>2915.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>41389189.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Allemagne</td>\n",
       "      <td>2461.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>82658409.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>Émirats arabes unis</td>\n",
       "      <td>2718.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>9487203.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>Équateur</td>\n",
       "      <td>1732.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>16785361.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>États-Unis d'Amérique</td>\n",
       "      <td>2698.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>325084756.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>Éthiopie</td>\n",
       "      <td>2005.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>106399924.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>2187.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>636039.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>172 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Zone  Disponibilité alimentaire (Kcal/personne/jour)  \\\n",
       "0              Afghanistan                                          1871.0   \n",
       "1           Afrique du Sud                                          2533.0   \n",
       "2                  Albanie                                          2203.0   \n",
       "3                  Algérie                                          2915.0   \n",
       "4                Allemagne                                          2461.0   \n",
       "..                     ...                                             ...   \n",
       "167    Émirats arabes unis                                          2718.0   \n",
       "168               Équateur                                          1732.0   \n",
       "169  États-Unis d'Amérique                                          2698.0   \n",
       "170               Éthiopie                                          2005.0   \n",
       "171           Îles Salomon                                          2187.0   \n",
       "\n",
       "     Année   Population  \n",
       "0     2017   36296113.0  \n",
       "1     2017   57009756.0  \n",
       "2     2017    2884169.0  \n",
       "3     2017   41389189.0  \n",
       "4     2017   82658409.0  \n",
       "..     ...          ...  \n",
       "167   2017    9487203.0  \n",
       "168   2017   16785361.0  \n",
       "169   2017  325084756.0  \n",
       "170   2017  106399924.0  \n",
       "171   2017     636039.0  \n",
       "\n",
       "[172 rows x 4 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " #Création du dataframe \"DISPO_ALIM2017\" issu de la fusion entre le df \"Population2017\" et \"dispo_alimVeg\"\n",
    "DISPO_ALIM2017Veg=pd.merge(dispo_alimVeg, Population2017, on='Zone')\n",
    "DISPO_ALIM2017Veg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "932491fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Création de la colonne Disponibilité alimentaire (Kcal/pays/an) qui sera une conversion de la disponibilité en Kcal/pers/jour, pour cela il faut multiplier par 365 (1an pour l'année 2017) et par le nombre de population\n",
    "DISPO_ALIM2017Veg['Disponibilité alimentaire (Kcal/pays/an)']=DISPO_ALIM2017Veg['Disponibilité alimentaire (Kcal/personne/jour)']*365*DISPO_ALIM2017Veg['Population']\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da076085",
   "metadata": {},
   "source": [
    "**Déterminer la disponibilité alimentaire annuelles de produit végétaux par pays**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "74986c8a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Il y a une disponibilité alimentaire totale de produit végataux de: 6300178937197865.0 Kcal\n"
     ]
    }
   ],
   "source": [
    "DISPO_ALIM2017Veg['Disponibilité alimentaire (Kcal/pays/an)'].sum()\n",
    "print(\"Il y a une disponibilité alimentaire totale de produit végataux de:\", DISPO_ALIM2017Veg['Disponibilité alimentaire (Kcal/pays/an)'].sum(),\"Kcal\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a928bf0b",
   "metadata": {},
   "source": [
    "**Déterminer les besoins caloriques annuelles par pays**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "0d0a6592",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Disponibilité alimentaire (Kcal/personne/jour)</th>\n",
       "      <th>Année</th>\n",
       "      <th>Population</th>\n",
       "      <th>Disponibilité alimentaire (Kcal/pays/an)</th>\n",
       "      <th>BesoinKcalPaysPAn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1871.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>2.478716e+13</td>\n",
       "      <td>3.444501e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>2533.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>57009756.0</td>\n",
       "      <td>5.270808e+13</td>\n",
       "      <td>5.410226e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Albanie</td>\n",
       "      <td>2203.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>2884169.0</td>\n",
       "      <td>2.319146e+12</td>\n",
       "      <td>2.737076e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Algérie</td>\n",
       "      <td>2915.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>41389189.0</td>\n",
       "      <td>4.403706e+13</td>\n",
       "      <td>3.927834e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Allemagne</td>\n",
       "      <td>2461.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>82658409.0</td>\n",
       "      <td>7.424916e+13</td>\n",
       "      <td>7.844283e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>Émirats arabes unis</td>\n",
       "      <td>2718.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>9487203.0</td>\n",
       "      <td>9.411969e+12</td>\n",
       "      <td>9.003356e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>Équateur</td>\n",
       "      <td>1732.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>16785361.0</td>\n",
       "      <td>1.061137e+13</td>\n",
       "      <td>1.592931e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>États-Unis d'Amérique</td>\n",
       "      <td>2698.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>325084756.0</td>\n",
       "      <td>3.201337e+14</td>\n",
       "      <td>3.085054e+14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>Éthiopie</td>\n",
       "      <td>2005.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>106399924.0</td>\n",
       "      <td>7.786612e+13</td>\n",
       "      <td>1.009735e+14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>2187.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>636039.0</td>\n",
       "      <td>5.077213e+11</td>\n",
       "      <td>6.036010e+11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>172 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Zone  Disponibilité alimentaire (Kcal/personne/jour)  \\\n",
       "0              Afghanistan                                          1871.0   \n",
       "1           Afrique du Sud                                          2533.0   \n",
       "2                  Albanie                                          2203.0   \n",
       "3                  Algérie                                          2915.0   \n",
       "4                Allemagne                                          2461.0   \n",
       "..                     ...                                             ...   \n",
       "167    Émirats arabes unis                                          2718.0   \n",
       "168               Équateur                                          1732.0   \n",
       "169  États-Unis d'Amérique                                          2698.0   \n",
       "170               Éthiopie                                          2005.0   \n",
       "171           Îles Salomon                                          2187.0   \n",
       "\n",
       "     Année   Population  Disponibilité alimentaire (Kcal/pays/an)  \\\n",
       "0     2017   36296113.0                              2.478716e+13   \n",
       "1     2017   57009756.0                              5.270808e+13   \n",
       "2     2017    2884169.0                              2.319146e+12   \n",
       "3     2017   41389189.0                              4.403706e+13   \n",
       "4     2017   82658409.0                              7.424916e+13   \n",
       "..     ...          ...                                       ...   \n",
       "167   2017    9487203.0                              9.411969e+12   \n",
       "168   2017   16785361.0                              1.061137e+13   \n",
       "169   2017  325084756.0                              3.201337e+14   \n",
       "170   2017  106399924.0                              7.786612e+13   \n",
       "171   2017     636039.0                              5.077213e+11   \n",
       "\n",
       "     BesoinKcalPaysPAn  \n",
       "0         3.444501e+13  \n",
       "1         5.410226e+13  \n",
       "2         2.737076e+12  \n",
       "3         3.927834e+13  \n",
       "4         7.844283e+13  \n",
       "..                 ...  \n",
       "167       9.003356e+12  \n",
       "168       1.592931e+13  \n",
       "169       3.085054e+14  \n",
       "170       1.009735e+14  \n",
       "171       6.036010e+11  \n",
       "\n",
       "[172 rows x 6 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Un homme a besoin entre 2400 à 2600 Kcal par jour, on choisit de prendre 2600Kcal pour plus \n",
    "#Besoin calorique journalier pour un homme => BesoinKcalHJr(Kcal/jr)\n",
    "BesoinKcalHJr=2600\n",
    "#Besoin calorique annuel par pays pour un an (BesoinKcalPaysPAn) \n",
    "#Déterminé par la multiplication du besoin journalier d'un homme, par 365 (1 an) et par le nombre de population\n",
    "#Création d'une nouvelle colonne 'BesoinKcalPaysPAn'\n",
    "DISPO_ALIM2017Veg['BesoinKcalPaysPAn'] = BesoinKcalHJr*365*DISPO_ALIM2017Veg['Population']\n",
    "DISPO_ALIM2017Veg"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a4835ef",
   "metadata": {},
   "source": [
    "**Pourcentage de personnes pouvant être nourries de produits végétaux**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "45c0e64d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Le pourcentage de personnes pouvant être nourries de produits végétaux est de: 91.04 %\n"
     ]
    }
   ],
   "source": [
    "#Pourcentage de personnes pouvant être nourris de végétaux\n",
    "#Calcul de la disponibilité alimentaire mondiale de végétaux pour un an (2017)\n",
    "DISPO_ALIMmondVeg2017=DISPO_ALIM2017Veg['Disponibilité alimentaire (Kcal/pays/an)'].sum()\n",
    "#Calcul du besoin calorique mondial\n",
    "BesoinKcalMond2017=DISPO_ALIM2017Veg['BesoinKcalPaysPAn'].sum()\n",
    "#Calcul du pourcentage de personnes pouvant être nourris de végétaux\n",
    "Pourc_PersPENV=(DISPO_ALIMmondVeg2017/BesoinKcalMond2017)*100\n",
    "print(\"Le pourcentage de personnes pouvant être nourries de produits végétaux est de:\",\"%.2f\" % Pourc_PersPENV,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98db7c27",
   "metadata": {},
   "source": [
    "**Nombre théorique de personnes pouvant être nourries**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "40e04ceb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nous pouvons nourrir théoriquement environ: 6638755465.962 personnes\n"
     ]
    }
   ],
   "source": [
    "#Nombre théorique de personnes pouvant être nourries\n",
    "#Calcul de la population mondiale en 2017\n",
    "PopulationMond2017=DISPO_ALIM2017Veg['Population'].sum()\n",
    "#Calcul du nombre théorique de personnes pouvant être nourries\n",
    "NbretheoPersPENV=(Pourc_PersPENV*PopulationMond2017)/100\n",
    "print(\"Nous pouvons nourrir théoriquement environ:\", round(NbretheoPersPENV,3),\"personnes\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "883b651c",
   "metadata": {},
   "source": [
    "## Question 4: Déterminer l'utilisation de la disponibilité intérieur:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be9515ef",
   "metadata": {},
   "source": [
    "## **Equation du bilan alimentaire trouvée par Julien**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f20d4bb",
   "metadata": {},
   "source": [
    "***Julien a constaté qu'il y a un lien logique entre l’ensemble des 10 variables exprimées en milliers de tonnes sur\n",
    "les utilisations de la disponibilité intérieure, qui peut s’exprimer avec une équation sous la forme:\n",
    "A1 + A2 + … = disponibilité intérieure = B1 + B2 + …***  \n",
    "\n",
    "***Julien a en fait trouvé l'équation du bilan alimentaire:***"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a93db140",
   "metadata": {},
   "source": [
    "*Disponibilité intérieure = Productions + Importations - Exportations + Variation des stocks*   \n",
    "*Disponibilité intérieure = Semences + Aliments pour animaux + Nourriture + Pertes + Autres utilisations + Traitements*  \n",
    "\n",
    "**Donc:**    \n",
    "\n",
    "*Semences + Aliments pour animaux + Nourriture + Pertes + Autres utilisations + Traitements = **Disponibilité intérieure** = Productions + Importations - Exportations + Variation des stocks*"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c89bc999",
   "metadata": {},
   "source": [
    "### - La part d'alimentation animale"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "4f02ef33",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1304245.0"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Somme de l'alimentation animale\n",
    "Somme_AlimAnim=dispo_alimentaire['Aliments pour animaux'].sum()\n",
    "Somme_AlimAnim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "5547f847",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9848994.0"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Somme de la disponibilité intérieure\n",
    "Somme_DispInt=dispo_alimentaire['Disponibilité intérieure'].sum()\n",
    "Somme_DispInt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "fb931912",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La part d'alimentation animale représentent: 13.24 %\n"
     ]
    }
   ],
   "source": [
    "#Pourcentage pour l'alimentation animale\n",
    "Pourc_AlimAnim=(Somme_AlimAnim/Somme_DispInt)*100\n",
    "\n",
    "print(\"La part d'alimentation animale représentent:\",\"%.2f\" % Pourc_AlimAnim,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7387dba4",
   "metadata": {},
   "source": [
    "### - Les pertes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "f5c4792a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "453698.0"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Somme des pertes\n",
    "Somme_Pertes=dispo_alimentaire['Pertes'].sum()\n",
    "Somme_Pertes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "4eed4d93",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Les pertes représentent: 4.61 %\n"
     ]
    }
   ],
   "source": [
    "#Pourcentage des pertes\n",
    "Pourc_pertes=(Somme_Pertes/Somme_DispInt)*100\n",
    "\n",
    "print(\"Les pertes représentent:\",\"%.2f\" % Pourc_pertes,\"%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2d0d44c3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "d3ccb485",
   "metadata": {},
   "source": [
    "### - La part dans l'alimentation humaine"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "b5b096c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4876258.0"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Somme de l'alimentation humaine (Nourriture)\n",
    "Somme_AlimHum=dispo_alimentaire['Nourriture'].sum()\n",
    "Somme_AlimHum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "19268f6c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La part de l'alimentation humaine représentent: 49.51 %\n"
     ]
    }
   ],
   "source": [
    "#Pourcentage de l'alimentation humaine\n",
    "Pourc_AlimHum=(Somme_AlimHum/Somme_DispInt)*100\n",
    "\n",
    "print(\"La part de l'alimentation humaine représentent:\",\"%.2f\" % Pourc_AlimHum,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4e72313",
   "metadata": {},
   "source": [
    "# II. Demandes formulées par Mélanie pour chacun des pays"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fee2980f",
   "metadata": {},
   "source": [
    "## Question1:Pays où la proportion de personnes sous alimentées est la plus forte en 2017"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "5f94b8ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Population sous nutris</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zone</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Afghanistan</th>\n",
       "      <td>10500000.0</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Afrique du Sud</th>\n",
       "      <td>3100000.0</td>\n",
       "      <td>57009756.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Albanie</th>\n",
       "      <td>100000.0</td>\n",
       "      <td>2884169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Algérie</th>\n",
       "      <td>1300000.0</td>\n",
       "      <td>41389189.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Allemagne</th>\n",
       "      <td>0.0</td>\n",
       "      <td>82658409.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>États-Unis d'Amérique</th>\n",
       "      <td>0.0</td>\n",
       "      <td>325084756.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Éthiopie</th>\n",
       "      <td>21100000.0</td>\n",
       "      <td>106399924.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Îles Cook</th>\n",
       "      <td>0.0</td>\n",
       "      <td>17507.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Îles Marshall</th>\n",
       "      <td>0.0</td>\n",
       "      <td>58058.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Îles Salomon</th>\n",
       "      <td>50000.0</td>\n",
       "      <td>636039.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>203 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Population sous nutris   Population\n",
       "Zone                                                      \n",
       "Afghanistan                        10500000.0   36296113.0\n",
       "Afrique du Sud                      3100000.0   57009756.0\n",
       "Albanie                              100000.0    2884169.0\n",
       "Algérie                             1300000.0   41389189.0\n",
       "Allemagne                                 0.0   82658409.0\n",
       "...                                       ...          ...\n",
       "États-Unis d'Amérique                     0.0  325084756.0\n",
       "Éthiopie                           21100000.0  106399924.0\n",
       "Îles Cook                                 0.0      17507.0\n",
       "Îles Marshall                             0.0      58058.0\n",
       "Îles Salomon                          50000.0     636039.0\n",
       "\n",
       "[203 rows x 2 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Reprise du dataframe \"proportion_pers_sous_nutris\" de la question 1 et filtrage sur l'année 2017\n",
    "BcpPersSousNutris2017=proportion_pers_sous_nutris.loc[proportion_pers_sous_nutris['Année']==2017]\n",
    "#Somme de la population totale de chaque pays et de la population sous nutris\n",
    "BcpPersSousNutris2017=proportion_pers_sous_nutris.groupby('Zone')[['Population sous nutris','Population']].sum()\n",
    "BcpPersSousNutris2017"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "c92c5222",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Population sous nutris</th>\n",
       "      <th>Population</th>\n",
       "      <th>PropPersSousNutris2017</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zone</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Dominique</th>\n",
       "      <td>50000.0</td>\n",
       "      <td>71458.0</td>\n",
       "      <td>69.971172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Haïti</th>\n",
       "      <td>5300000.0</td>\n",
       "      <td>10982366.0</td>\n",
       "      <td>48.259182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>République populaire démocratique de Corée</th>\n",
       "      <td>12000000.0</td>\n",
       "      <td>25429825.0</td>\n",
       "      <td>47.188685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Saint-Vincent-et-les Grenadines</th>\n",
       "      <td>50000.0</td>\n",
       "      <td>109827.0</td>\n",
       "      <td>45.526146</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kiribati</th>\n",
       "      <td>50000.0</td>\n",
       "      <td>114158.0</td>\n",
       "      <td>43.798945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Madagascar</th>\n",
       "      <td>10500000.0</td>\n",
       "      <td>25570512.0</td>\n",
       "      <td>41.062924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Libéria</th>\n",
       "      <td>1800000.0</td>\n",
       "      <td>4702226.0</td>\n",
       "      <td>38.279742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lesotho</th>\n",
       "      <td>800000.0</td>\n",
       "      <td>2091534.0</td>\n",
       "      <td>38.249438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tchad</th>\n",
       "      <td>5700000.0</td>\n",
       "      <td>15016753.0</td>\n",
       "      <td>37.957606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rwanda</th>\n",
       "      <td>4200000.0</td>\n",
       "      <td>11980961.0</td>\n",
       "      <td>35.055619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mozambique</th>\n",
       "      <td>9400000.0</td>\n",
       "      <td>28649018.0</td>\n",
       "      <td>32.810898</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Timor-Leste</th>\n",
       "      <td>400000.0</td>\n",
       "      <td>1243258.0</td>\n",
       "      <td>32.173531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Afghanistan</th>\n",
       "      <td>10500000.0</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>28.928718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Congo</th>\n",
       "      <td>1400000.0</td>\n",
       "      <td>5110695.0</td>\n",
       "      <td>27.393535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Venezuela (République bolivarienne du)</th>\n",
       "      <td>8000000.0</td>\n",
       "      <td>29402484.0</td>\n",
       "      <td>27.208586</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            Population sous nutris  \\\n",
       "Zone                                                                 \n",
       "Dominique                                                  50000.0   \n",
       "Haïti                                                    5300000.0   \n",
       "République populaire démocratique de Corée              12000000.0   \n",
       "Saint-Vincent-et-les Grenadines                            50000.0   \n",
       "Kiribati                                                   50000.0   \n",
       "Madagascar                                              10500000.0   \n",
       "Libéria                                                  1800000.0   \n",
       "Lesotho                                                   800000.0   \n",
       "Tchad                                                    5700000.0   \n",
       "Rwanda                                                   4200000.0   \n",
       "Mozambique                                               9400000.0   \n",
       "Timor-Leste                                               400000.0   \n",
       "Afghanistan                                             10500000.0   \n",
       "Congo                                                    1400000.0   \n",
       "Venezuela (République bolivarienne du)                   8000000.0   \n",
       "\n",
       "                                            Population  PropPersSousNutris2017  \n",
       "Zone                                                                            \n",
       "Dominique                                      71458.0               69.971172  \n",
       "Haïti                                       10982366.0               48.259182  \n",
       "République populaire démocratique de Corée  25429825.0               47.188685  \n",
       "Saint-Vincent-et-les Grenadines               109827.0               45.526146  \n",
       "Kiribati                                      114158.0               43.798945  \n",
       "Madagascar                                  25570512.0               41.062924  \n",
       "Libéria                                      4702226.0               38.279742  \n",
       "Lesotho                                      2091534.0               38.249438  \n",
       "Tchad                                       15016753.0               37.957606  \n",
       "Rwanda                                      11980961.0               35.055619  \n",
       "Mozambique                                  28649018.0               32.810898  \n",
       "Timor-Leste                                  1243258.0               32.173531  \n",
       "Afghanistan                                 36296113.0               28.928718  \n",
       "Congo                                        5110695.0               27.393535  \n",
       "Venezuela (République bolivarienne du)      29402484.0               27.208586  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Calcul de la proportion de personnes sous nutris\n",
    "BcpPersSousNutris2017['PropPersSousNutris2017']=(BcpPersSousNutris2017['Population sous nutris']/BcpPersSousNutris2017['Population'])*100\n",
    "#Tri en décroissant de la proportion de personnes sous nutris\n",
    "PropSousNutris2017=BcpPersSousNutris2017.sort_values('PropPersSousNutris2017', ascending=False)\n",
    "PropSousNutris2017.head(15)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6a8fe21",
   "metadata": {},
   "source": [
    "## Question 2 : Pays qui ont bénéficié le plus d'aide en 2013"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "fb72a941",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pays bénéficiaire</th>\n",
       "      <th>Année</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Qtité Aide en tonne</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>Autres non-céréales</td>\n",
       "      <td>682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014</td>\n",
       "      <td>Autres non-céréales</td>\n",
       "      <td>335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>Blé et Farin</td>\n",
       "      <td>39224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014</td>\n",
       "      <td>Blé et Farin</td>\n",
       "      <td>15160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>Céréales</td>\n",
       "      <td>40504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1470</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>Mélanges et préparations</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1471</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2013</td>\n",
       "      <td>Non-céréales</td>\n",
       "      <td>5022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1472</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2014</td>\n",
       "      <td>Non-céréales</td>\n",
       "      <td>2310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1473</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>Non-céréales</td>\n",
       "      <td>306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1474</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2013</td>\n",
       "      <td>Riz, total</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1475 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Pays bénéficiaire  Année                   Produit  Qtité Aide en tonne\n",
       "0          Afghanistan   2013       Autres non-céréales                  682\n",
       "1          Afghanistan   2014       Autres non-céréales                  335\n",
       "2          Afghanistan   2013              Blé et Farin                39224\n",
       "3          Afghanistan   2014              Blé et Farin                15160\n",
       "4          Afghanistan   2013                  Céréales                40504\n",
       "...                ...    ...                       ...                  ...\n",
       "1470          Zimbabwe   2015  Mélanges et préparations                   96\n",
       "1471          Zimbabwe   2013              Non-céréales                 5022\n",
       "1472          Zimbabwe   2014              Non-céréales                 2310\n",
       "1473          Zimbabwe   2015              Non-céréales                  306\n",
       "1474          Zimbabwe   2013                Riz, total                   64\n",
       "\n",
       "[1475 rows x 4 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aide_alimentaire"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "ea2452ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Année</th>\n",
       "      <th>Qtité Aide en tonne</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pays bénéficiaire</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>République arabe syrienne</th>\n",
       "      <td>76543</td>\n",
       "      <td>1858943</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Éthiopie</th>\n",
       "      <td>66460</td>\n",
       "      <td>1381294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yémen</th>\n",
       "      <td>76553</td>\n",
       "      <td>1206484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Soudan du Sud</th>\n",
       "      <td>44309</td>\n",
       "      <td>695248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Soudan</th>\n",
       "      <td>48335</td>\n",
       "      <td>669784</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kenya</th>\n",
       "      <td>54376</td>\n",
       "      <td>552836</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bangladesh</th>\n",
       "      <td>50347</td>\n",
       "      <td>348188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Somalie</th>\n",
       "      <td>54377</td>\n",
       "      <td>292678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>République démocratique du Congo</th>\n",
       "      <td>50350</td>\n",
       "      <td>288502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Niger</th>\n",
       "      <td>62448</td>\n",
       "      <td>276344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tchad</th>\n",
       "      <td>56392</td>\n",
       "      <td>267966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pakistan</th>\n",
       "      <td>38261</td>\n",
       "      <td>231072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>République populaire démocratique de Corée</th>\n",
       "      <td>58413</td>\n",
       "      <td>187412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Afghanistan</th>\n",
       "      <td>32216</td>\n",
       "      <td>185452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>République-Unie de Tanzanie</th>\n",
       "      <td>48334</td>\n",
       "      <td>172022</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            Année  Qtité Aide en tonne\n",
       "Pays bénéficiaire                                                     \n",
       "République arabe syrienne                   76543              1858943\n",
       "Éthiopie                                    66460              1381294\n",
       "Yémen                                       76553              1206484\n",
       "Soudan du Sud                               44309               695248\n",
       "Soudan                                      48335               669784\n",
       "Kenya                                       54376               552836\n",
       "Bangladesh                                  50347               348188\n",
       "Somalie                                     54377               292678\n",
       "République démocratique du Congo            50350               288502\n",
       "Niger                                       62448               276344\n",
       "Tchad                                       56392               267966\n",
       "Pakistan                                    38261               231072\n",
       "République populaire démocratique de Corée  58413               187412\n",
       "Afghanistan                                 32216               185452\n",
       "République-Unie de Tanzanie                 48334               172022"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Filtrage de l'année 2013 et somme de la quantité d'aide alimentaire qui a été donnée\n",
    "PlusAideAlim=aide_alimentaire.loc[aide_alimentaire[\"Année\"]==2013, 'Qtité Aide en tonne'].sum()\n",
    "#Aggrégation par pays bénéficiaires et tri par ordre décroissant pour déterminer les pays pays qui ont bénéficiés le plus d'aide\n",
    "PlusAideAlim=(aide_alimentaire.groupby('Pays bénéficiaire').sum()).sort_values('Qtité Aide en tonne', ascending=False)\n",
    "PlusAideAlim.head(15)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6855223b",
   "metadata": {},
   "source": [
    "## Question 3 : Pays ayant le plus/le moins de disponibilité par habitants"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02eaa62b",
   "metadata": {},
   "source": [
    "**Pays ayant le moins de disponibilité alimentaire**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "6da08bb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Disponibilité alimentaire (Kcal/personne/jour)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zone</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>République centrafricaine</th>\n",
       "      <td>1879.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zambie</th>\n",
       "      <td>1924.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Madagascar</th>\n",
       "      <td>2056.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Afghanistan</th>\n",
       "      <td>2087.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Haïti</th>\n",
       "      <td>2089.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>République populaire démocratique de Corée</th>\n",
       "      <td>2093.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tchad</th>\n",
       "      <td>2109.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zimbabwe</th>\n",
       "      <td>2113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ouganda</th>\n",
       "      <td>2126.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Timor-Leste</th>\n",
       "      <td>2129.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Éthiopie</th>\n",
       "      <td>2129.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Namibie</th>\n",
       "      <td>2166.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tadjikistan</th>\n",
       "      <td>2199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>République-Unie de Tanzanie</th>\n",
       "      <td>2204.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kenya</th>\n",
       "      <td>2205.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            Disponibilité alimentaire (Kcal/personne/jour)\n",
       "Zone                                                                                      \n",
       "République centrafricaine                                                           1879.0\n",
       "Zambie                                                                              1924.0\n",
       "Madagascar                                                                          2056.0\n",
       "Afghanistan                                                                         2087.0\n",
       "Haïti                                                                               2089.0\n",
       "République populaire démocratique de Corée                                          2093.0\n",
       "Tchad                                                                               2109.0\n",
       "Zimbabwe                                                                            2113.0\n",
       "Ouganda                                                                             2126.0\n",
       "Timor-Leste                                                                         2129.0\n",
       "Éthiopie                                                                            2129.0\n",
       "Namibie                                                                             2166.0\n",
       "Tadjikistan                                                                         2199.0\n",
       "République-Unie de Tanzanie                                                         2204.0\n",
       "Kenya                                                                               2205.0"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "dispo_alimFaible=dispo_alimentaire[['Zone','Disponibilité alimentaire (Kcal/personne/jour)']]\n",
    "DISPOALIM_Faible=dispo_alimFaible.groupby('Zone').sum().sort_values('Disponibilité alimentaire (Kcal/personne/jour)')\n",
    "DISPOALIM_Faible.head(15)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b433eef1",
   "metadata": {},
   "source": [
    "**Pays ayant le plus de disponibilité alimentaire**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "47bf09be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Disponibilité alimentaire (Kcal/personne/jour)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zone</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Autriche</th>\n",
       "      <td>3770.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Belgique</th>\n",
       "      <td>3737.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Turquie</th>\n",
       "      <td>3708.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>États-Unis d'Amérique</th>\n",
       "      <td>3682.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Israël</th>\n",
       "      <td>3610.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Irlande</th>\n",
       "      <td>3602.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Italie</th>\n",
       "      <td>3578.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Luxembourg</th>\n",
       "      <td>3540.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Égypte</th>\n",
       "      <td>3518.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Allemagne</th>\n",
       "      <td>3503.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Koweït</th>\n",
       "      <td>3499.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Canada</th>\n",
       "      <td>3499.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Monténégro</th>\n",
       "      <td>3490.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Norvège</th>\n",
       "      <td>3483.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>France</th>\n",
       "      <td>3482.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Disponibilité alimentaire (Kcal/personne/jour)\n",
       "Zone                                                                 \n",
       "Autriche                                                       3770.0\n",
       "Belgique                                                       3737.0\n",
       "Turquie                                                        3708.0\n",
       "États-Unis d'Amérique                                          3682.0\n",
       "Israël                                                         3610.0\n",
       "Irlande                                                        3602.0\n",
       "Italie                                                         3578.0\n",
       "Luxembourg                                                     3540.0\n",
       "Égypte                                                         3518.0\n",
       "Allemagne                                                      3503.0\n",
       "Koweït                                                         3499.0\n",
       "Canada                                                         3499.0\n",
       "Monténégro                                                     3490.0\n",
       "Norvège                                                        3483.0\n",
       "France                                                         3482.0"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dispo_alimFort=dispo_alimentaire[['Zone','Disponibilité alimentaire (Kcal/personne/jour)']]\n",
    "DISPOALIM_Fort=dispo_alimFort.groupby('Zone').sum().sort_values('Disponibilité alimentaire (Kcal/personne/jour)',ascending=False)\n",
    "DISPOALIM_Fort.head(15)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73ab3f23",
   "metadata": {},
   "source": [
    "## III. Obervations et remarques de Julien "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8357b4c",
   "metadata": {},
   "source": [
    "### Utilisation étonnante de certaines denrées alimentaire: l'exemple des céréales et du manioc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db0c12b4",
   "metadata": {},
   "source": [
    "### ***Etude sur l'utilisation des céréales***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "1c39160c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Importation du fichier csv généré dans l'onglet bilan alimentaire sur le site de la FAO\n",
    "FichierCereales=pd.read_csv('FAOSTAT_data_fr_4-2-2023.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "6a4ca10b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (M49)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit (CPC)</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Bilans Alimentaires (2010-)</td>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5521</td>\n",
       "      <td>Aliments pour animaux</td>\n",
       "      <td>S2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>221</td>\n",
       "      <td>I</td>\n",
       "      <td>Valeur imputée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Bilans Alimentaires (2010-)</td>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5521</td>\n",
       "      <td>Aliments pour animaux</td>\n",
       "      <td>S2807</td>\n",
       "      <td>Riz et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>4</td>\n",
       "      <td>I</td>\n",
       "      <td>Valeur imputée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Bilans Alimentaires (2010-)</td>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5521</td>\n",
       "      <td>Aliments pour animaux</td>\n",
       "      <td>S2513</td>\n",
       "      <td>Orge et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>67</td>\n",
       "      <td>I</td>\n",
       "      <td>Valeur imputée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Bilans Alimentaires (2010-)</td>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5521</td>\n",
       "      <td>Aliments pour animaux</td>\n",
       "      <td>S2514</td>\n",
       "      <td>Maïs et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>111</td>\n",
       "      <td>I</td>\n",
       "      <td>Valeur imputée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Bilans Alimentaires (2010-)</td>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5521</td>\n",
       "      <td>Aliments pour animaux</td>\n",
       "      <td>S2515</td>\n",
       "      <td>Seigle et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>0</td>\n",
       "      <td>I</td>\n",
       "      <td>Valeur imputée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Bilans Alimentaires (2010-)</td>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5521</td>\n",
       "      <td>Aliments pour animaux</td>\n",
       "      <td>S2516</td>\n",
       "      <td>Avoine</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>0</td>\n",
       "      <td>I</td>\n",
       "      <td>Valeur imputée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Bilans Alimentaires (2010-)</td>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5521</td>\n",
       "      <td>Aliments pour animaux</td>\n",
       "      <td>S2517</td>\n",
       "      <td>Millet et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>0</td>\n",
       "      <td>I</td>\n",
       "      <td>Valeur imputée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Bilans Alimentaires (2010-)</td>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5521</td>\n",
       "      <td>Aliments pour animaux</td>\n",
       "      <td>S2518</td>\n",
       "      <td>Sorgho et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>0</td>\n",
       "      <td>I</td>\n",
       "      <td>Valeur imputée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Bilans Alimentaires (2010-)</td>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5521</td>\n",
       "      <td>Aliments pour animaux</td>\n",
       "      <td>S2520</td>\n",
       "      <td>Céréales, Autres</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>0</td>\n",
       "      <td>I</td>\n",
       "      <td>Valeur imputée</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Code Domaine                      Domaine  Code zone (M49)         Zone  \\\n",
       "0           FBS  Bilans Alimentaires (2010-)                4  Afghanistan   \n",
       "2           FBS  Bilans Alimentaires (2010-)                4  Afghanistan   \n",
       "4           FBS  Bilans Alimentaires (2010-)                4  Afghanistan   \n",
       "6           FBS  Bilans Alimentaires (2010-)                4  Afghanistan   \n",
       "8           FBS  Bilans Alimentaires (2010-)                4  Afghanistan   \n",
       "10          FBS  Bilans Alimentaires (2010-)                4  Afghanistan   \n",
       "12          FBS  Bilans Alimentaires (2010-)                4  Afghanistan   \n",
       "14          FBS  Bilans Alimentaires (2010-)                4  Afghanistan   \n",
       "16          FBS  Bilans Alimentaires (2010-)                4  Afghanistan   \n",
       "\n",
       "    Code Élément                Élément Code Produit (CPC)  \\\n",
       "0           5521  Aliments pour animaux              S2511   \n",
       "2           5521  Aliments pour animaux              S2807   \n",
       "4           5521  Aliments pour animaux              S2513   \n",
       "6           5521  Aliments pour animaux              S2514   \n",
       "8           5521  Aliments pour animaux              S2515   \n",
       "10          5521  Aliments pour animaux              S2516   \n",
       "12          5521  Aliments pour animaux              S2517   \n",
       "14          5521  Aliments pour animaux              S2518   \n",
       "16          5521  Aliments pour animaux              S2520   \n",
       "\n",
       "               Produit  Code année  Année               Unité  Valeur Symbole  \\\n",
       "0      Blé et produits        2017   2017  Milliers de tonnes     221       I   \n",
       "2      Riz et produits        2017   2017  Milliers de tonnes       4       I   \n",
       "4     Orge et produits        2017   2017  Milliers de tonnes      67       I   \n",
       "6     Maïs et produits        2017   2017  Milliers de tonnes     111       I   \n",
       "8   Seigle et produits        2017   2017  Milliers de tonnes       0       I   \n",
       "10              Avoine        2017   2017  Milliers de tonnes       0       I   \n",
       "12  Millet et produits        2017   2017  Milliers de tonnes       0       I   \n",
       "14  Sorgho et produits        2017   2017  Milliers de tonnes       0       I   \n",
       "16    Céréales, Autres        2017   2017  Milliers de tonnes       0       I   \n",
       "\n",
       "   Description du Symbole  \n",
       "0          Valeur imputée  \n",
       "2          Valeur imputée  \n",
       "4          Valeur imputée  \n",
       "6          Valeur imputée  \n",
       "8          Valeur imputée  \n",
       "10         Valeur imputée  \n",
       "12         Valeur imputée  \n",
       "14         Valeur imputée  \n",
       "16         Valeur imputée  "
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Extraction de la liste de céréales\n",
    "ProdCereales=FichierCereales.drop_duplicates(subset=['Produit'])\n",
    "ProdCereales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1836c9ff",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "2cd1b131",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Aliments pour animaux</th>\n",
       "      <th>Nourriture</th>\n",
       "      <th>Autres Utilisations</th>\n",
       "      <th>Exportations - Quantité</th>\n",
       "      <th>Disponibilité intérieure</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Céréales, Autres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>Avoine</td>\n",
       "      <td>8.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>49.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>Céréales, Autres</td>\n",
       "      <td>8.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>Albanie</td>\n",
       "      <td>Avoine</td>\n",
       "      <td>25.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>Albanie</td>\n",
       "      <td>Céréales, Autres</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15347</th>\n",
       "      <td>États-Unis d'Amérique</td>\n",
       "      <td>Avoine</td>\n",
       "      <td>1430.0</td>\n",
       "      <td>1265.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>102.0</td>\n",
       "      <td>2797.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15361</th>\n",
       "      <td>États-Unis d'Amérique</td>\n",
       "      <td>Céréales, Autres</td>\n",
       "      <td>77.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>91.0</td>\n",
       "      <td>271.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15441</th>\n",
       "      <td>Éthiopie</td>\n",
       "      <td>Avoine</td>\n",
       "      <td>NaN</td>\n",
       "      <td>57.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15454</th>\n",
       "      <td>Éthiopie</td>\n",
       "      <td>Céréales, Autres</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2495.0</td>\n",
       "      <td>469.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3274.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15545</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>Céréales, Autres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>339 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Zone           Produit  Aliments pour animaux  \\\n",
       "12               Afghanistan  Céréales, Autres                    NaN   \n",
       "67            Afrique du Sud            Avoine                    8.0   \n",
       "81            Afrique du Sud  Céréales, Autres                    8.0   \n",
       "162                  Albanie            Avoine                   25.0   \n",
       "176                  Albanie  Céréales, Autres                    0.0   \n",
       "...                      ...               ...                    ...   \n",
       "15347  États-Unis d'Amérique            Avoine                 1430.0   \n",
       "15361  États-Unis d'Amérique  Céréales, Autres                   77.0   \n",
       "15441               Éthiopie            Avoine                    NaN   \n",
       "15454               Éthiopie  Céréales, Autres                    0.0   \n",
       "15545           Îles Salomon  Céréales, Autres                    NaN   \n",
       "\n",
       "       Nourriture  Autres Utilisations  Exportations - Quantité  \\\n",
       "12            0.0                  NaN                      NaN   \n",
       "67           40.0                  NaN                      4.0   \n",
       "81            4.0                  NaN                     10.0   \n",
       "162           0.0                  NaN                      NaN   \n",
       "176           0.0                  NaN                      0.0   \n",
       "...           ...                  ...                      ...   \n",
       "15347      1265.0                  NaN                    102.0   \n",
       "15361       200.0                  NaN                     91.0   \n",
       "15441        57.0                  NaN                      0.0   \n",
       "15454      2495.0                469.0                      0.0   \n",
       "15545         0.0                  NaN                      NaN   \n",
       "\n",
       "       Disponibilité intérieure  \n",
       "12                          0.0  \n",
       "67                         49.0  \n",
       "81                         12.0  \n",
       "162                        28.0  \n",
       "176                         0.0  \n",
       "...                         ...  \n",
       "15347                    2797.0  \n",
       "15361                     271.0  \n",
       "15441                      60.0  \n",
       "15454                    3274.0  \n",
       "15545                       0.0  \n",
       "\n",
       "[339 rows x 7 columns]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Création d'un dataframe de produits céréaliers issu du dataframe dispo_alimentaire d'où on extrait les colonnes les plus utiles pour l'étude\n",
    "UtiliteCereales=dispo_alimentaire[['Zone', 'Produit','Aliments pour animaux','Nourriture','Autres Utilisations','Exportations - Quantité','Disponibilité intérieure']]\n",
    "UtiliteCereales = UtiliteCereales.loc[(UtiliteCereales ['Produit']=='Blé et produits')|(UtiliteCereales ['Produit']=='Riz et produits')|(UtiliteCereales ['Produit']=='Orge et produits')|(UtiliteCereales ['Produit']=='Maïs et produits')|(UtiliteCereales ['Produit']=='Seigle et produits')|(UtiliteCereales ['Produit']=='Avoine')|(UtiliteCereales ['Produit']=='Milet et produits')|(UtiliteCereales ['Produit']=='Sorgho et produits')|(UtiliteCereales ['Produit']=='Céréales, Autres')]\n",
    "UtiliteCereales"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a6a6865",
   "metadata": {},
   "source": [
    "**Part d'utilisation des céréales dans l'alimentation humaine**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "ea5c863e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La part d'utilisation des céréales dans l'alimentation humaine est de: 18.13 %\n"
     ]
    }
   ],
   "source": [
    "#Somme des produits céréaliers utilisés dans la l'alimentation humaine\n",
    "Somme_NourritureCere=UtiliteCereales['Nourriture'].sum()\n",
    "#Somme des Disponiblites interieures en produits céraliers\n",
    "Somme_DispoIntCere=UtiliteCereales['Disponibilité intérieure'].sum() \n",
    "#Pourcentage de l'utilisation des céréales dans l'alimentation humaine\n",
    "Pourcentage_NourritureCere=(Somme_NourritureCere/Somme_DispoIntCere)*100\n",
    "print(\"La part d'utilisation des céréales dans l'alimentation humaine est de:\",\"%.2f\" % Pourcentage_NourritureCere,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ecd4689",
   "metadata": {},
   "source": [
    "**Part d'utilisation des céréales dans l'alimentation animale**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "80e06e5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La part d'utilisation des céréales dans l'alimentation animale est de: 69.34 %\n"
     ]
    }
   ],
   "source": [
    "#Somme des produits céréaliers utilisés dans la l'alimentation humaine\n",
    "Somme_AlimAnimCere=UtiliteCereales['Aliments pour animaux'].sum()\n",
    "#Somme des Disponiblites interieures en produits céraliers\n",
    "Somme_DispoIntCere=UtiliteCereales['Disponibilité intérieure'].sum() \n",
    "#Pourcentage de l'utilisation des céréales dans l'alimentation humaine\n",
    "Pourcentage_AlimAnimCere=(Somme_AlimAnimCere/Somme_DispoIntCere)*100\n",
    "print(\"La part d'utilisation des céréales dans l'alimentation animale est de:\",\"%.2f\" % Pourcentage_AlimAnimCere,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a19a99e",
   "metadata": {},
   "source": [
    "On constate que les céreales sont principalements utilisés pour nourrir les animaux"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "531617eb",
   "metadata": {},
   "source": [
    "### ***Etude sur l'utilisation du manioc en Thailande***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "5e1579c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Aliments pour animaux</th>\n",
       "      <th>Nourriture</th>\n",
       "      <th>Production</th>\n",
       "      <th>Exportations - Quantité</th>\n",
       "      <th>Importations - Quantité</th>\n",
       "      <th>Disponibilité intérieure</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>13809</th>\n",
       "      <td>Thaïlande</td>\n",
       "      <td>Manioc</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>871.0</td>\n",
       "      <td>30228.0</td>\n",
       "      <td>25214.0</td>\n",
       "      <td>1250.0</td>\n",
       "      <td>6264.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Zone Produit  Aliments pour animaux  Nourriture  Production  \\\n",
       "13809  Thaïlande  Manioc                 1800.0       871.0     30228.0   \n",
       "\n",
       "       Exportations - Quantité  Importations - Quantité  \\\n",
       "13809                  25214.0                   1250.0   \n",
       "\n",
       "       Disponibilité intérieure  \n",
       "13809                    6264.0  "
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "UtiliteManioc=dispo_alimentaire[['Zone', 'Produit','Aliments pour animaux','Nourriture','Production','Exportations - Quantité','Importations - Quantité','Disponibilité intérieure']]\n",
    "ThailandeUtiliteManioc=UtiliteManioc.loc[(UtiliteManioc['Zone']=='Thaïlande')&(UtiliteManioc['Produit']=='Manioc')]\n",
    "ThailandeUtiliteManioc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f9e2656",
   "metadata": {},
   "source": [
    "**Part d'utilisation du manioc dans l'alimentation humaine**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "a8d66b7d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La part d'utilisation du manioc dans l'alimentation humaine est de: 2.88 %\n"
     ]
    }
   ],
   "source": [
    "PourcentageManiocAlimHum=(ThailandeUtiliteManioc['Nourriture']/ThailandeUtiliteManioc['Production'])*100\n",
    "print(\"La part d'utilisation du manioc dans l'alimentation humaine est de:\",\"%.2f\" % PourcentageManiocAlimHum,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2da5efb",
   "metadata": {},
   "source": [
    "**Part d'utilisation du manioc dans l'alimentation animale**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "3561f762",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La part d'utilisation des céréales dans l'alimentation animale est de: 5.95 %\n"
     ]
    }
   ],
   "source": [
    "PourcentageManiocAlimAnim=(ThailandeUtiliteManioc['Aliments pour animaux']/ThailandeUtiliteManioc['Production'])*100\n",
    "print(\"La part d'utilisation des céréales dans l'alimentation animale est de:\",\"%.2f\" % PourcentageManiocAlimAnim,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb7ddbc2",
   "metadata": {},
   "source": [
    "**Part d'exportation du manioc**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "2fd1ac37",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La part d'exportation du manioc est de: 83.41 %\n"
     ]
    }
   ],
   "source": [
    "PourcentageManiocExport=(ThailandeUtiliteManioc['Exportations - Quantité']/ThailandeUtiliteManioc['Production'])*100\n",
    "print(\"La part d'exportation du manioc est de:\",\"%.2f\" % PourcentageManiocExport,\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cfd365e3",
   "metadata": {},
   "source": [
    "**proportion de personnes malnutris en Thaïlande**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "id": "680fee7b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La proportion de personnes malnutris en Thaïlande est de: 8.96 %\n"
     ]
    }
   ],
   "source": [
    "Thailande=proportion_pers_sous_nutris.loc[proportion_pers_sous_nutris['Zone']=='Thaïlande']\n",
    "prop_PersSousNutrisThailande=(Thailande['Population sous nutris']/Thailande['Population'])*100\n",
    "print(\"La proportion de personnes malnutris en Thaïlande est de:\",\"%.2f\" % prop_PersSousNutrisThailande,\"%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f634c6d1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
